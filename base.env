## Valkey (Redis-compatible)
VALKEY_PORT=6379
VALKEY_URL=redis://valkey:6379
VALKEY_PASSWORD=change_this_password # Set a password in .env file

## Mongo
MONGO_PORT=27017
MONGO_URL=mongodb://mongo/demodb

## CIPHER to encrypt/decrypt third-party tokens (e.g. Mailgun API key, Blackblaze API key, etc.)
CIPHER_KEY=change_this_cipher_key       # Generate a random key in .env file
CIPHER_IV_KEY=change_this_cipher_iv_key # Generate a random key in .env file

## General microservice configuration
NODE_ENV=production
LOGGER_LEVEL=info

## gateway
GATEWAY_PORT=8080
GATEWAY_DEBUG_PORT=9225
GATEWAY_EXPOSE_FRONTENDS=true      # The gateway proxies back-end services and optionally exposes the front-end applications
CORS_ENABLED=true                  # Enable CORS for the gateway but also for the front-end applications
APP_DOMAIN=localhost        # The domain of the application to define CORS in the gateway. Used also to limit the domain of the cookies used for session and refresh tokens 
APP_PROTOCOL=http           # The protocol used for the application (http or https)
# The url to access the gateway from the front-end applications
GATEWAY_URL=http://localhost:${GATEWAY_PORT}
# The url to access the gateway from the inside of the docker network
DOCKER_GATEWAY_URL=http://gateway:${GATEWAY_PORT}

## authenticator
AUTHENTICATOR_PORT=8000
AUTHENTICATOR_DEBUG_PORT=9226
# Secrets to sign/verify JWT tokens 
ACCESS_TOKEN_SECRET=change_this_access_token_secret    # Generate a random key in .env file
REFRESH_TOKEN_SECRET=change_this_refresh_token_secret  # Generate a random key in .env file
RESET_TOKEN_SECRET=change_this_reset_token_secret      # Generate a random key in .env file
APPCREDZ_TOKEN_SECRET=change_this_appcredz_token_secret # Generate a random key in .env file
# The url to access the authenticator from the inside of the docker network
AUTHENTICATOR_URL=http://authenticator:${AUTHENTICATOR_PORT}

## pdfgenerator
PDFGENERATOR_PORT=8300
PDFGENERATOR_DEBUG_PORT=9227
# The url to access the pdfgenerator from the inside of the docker network
PDFGENERATOR_URL=http://pdfgenerator:${PDFGENERATOR_PORT}/pdfgenerator

## emailer
EMAILER_PORT=8400
EMAILER_DEBUG_PORT=9228
# General Mailgun configuration to send emails for forgot password, welcome, etc.
ALLOW_SENDING_EMAILS=true                                 # Set to false to disable sending emails
EMAIL_FROM="Example <noreply@example.com>"                # The email address to send emails from
EMAIL_REPLY_TO=customer-service@example.com               # The email address to reply to
EMAIL_BCC=manager1@example.com,manager2@example.com       # The email address to send a copy of the email to
# The url to access the emailer from the inside of the docker network
EMAILER_URL=http://emailer:${EMAILER_PORT}/emailer

## Email delivery configuration
# Mailgun configuration
# MAILGUN_API_KEY=your_api_key                             # Get your API key from https://app.mailgun.com/app/account/security/api_keys
# MAILGUN_DOMAIN=mg.example.com                            # Get your domain from https://app.mailgun.com/app/sending/domains
# Gmail configuration
# GMAIL_EMAIL=your_gmail_address                           # Your Gmail address
# GMAIL_APP_PASSWORD=your_gmail_password                   # Your Gmail app password
# Custom SMTP configuration
#SMTP_SERVER=smtp.example.com                               # Your SMTP server
#SMTP_PORT=587                                              # Your SMTP port
#SMTP_SECURE=false                                          # Set to true if your SMTP server uses SSL
#SMTP_USERNAME=your_smtp_username                           # Your SMTP username 
#SMTP_PASSWORD=your_smtp_password                           # Your SMTP password

## api
API_PORT=8200
API_DEBUG_PORT=9229
DEMO_MODE=true    # Set the application in demo mode to use the demo database and a demo user
RESTORE_DB=true   # Set to true to restore the database from the ./backup directory at statup
# The url to access the api from the inside of the docker network
API_URL=http://api:${API_PORT}/api/v2

## tenantapi
TENANTAPI_PORT=8250
TENANTAPI_DEBUG_PORT=9240
# The url to access the api from the inside of the docker network
TENANTAPI_URL=http://tenantapi:${TENANTAPI_PORT}/tenantapi

## cache
CACHE_PORT=8600
CACHE_DEBUG_PORT=9231
# The url to access the cache from the inside of the docker network
CACHE_URL=http://cache:${CACHE_PORT}

## monitoring
MONITORING_PORT=8800
MONITORING_DEBUG_PORT=9232
# The url to access the monitoring from the inside of the docker network
MONITORING_URL=http://monitoring:${MONITORING_PORT}

## whatsapp
WHATSAPP_PORT=8500
WHATSAPP_DEBUG_PORT=9233
# The url to access the whatsapp service from the inside of the docker network
WHATSAPP_URL=http://whatsapp:${WHATSAPP_PORT}

## resetservice
## /!\ To not add in production just for test purposes
RESETSERVICE_PORT=8900
RESETSERVICE_DEBUG_PORT=9230
# The url to access the resetservice from the inside of the docker network
RESETSERVICE_URL=http://resetservice:${RESETSERVICE_PORT}

## frontend
APP_NAME=MicroRealEstate # The name of the application displayed in the application header
SIGNUP=true              # Enable/disable the signup feature 
FEEDBACK_EMAIL=feedback@example.com # Email address for user feedback

## landlord frontend
LANDLORD_FRONTEND_PORT=8180
LANDLORD_BASE_PATH=/landlord
# The url to access the landlord-frontend from the inside of the docker network
LANDLORD_FRONTEND_URL=http://landlord-frontend:${LANDLORD_FRONTEND_PORT}
# The url to access the landlord application from the browser
LANDLORD_APP_URL=${GATEWAY_URL}${LANDLORD_BASE_PATH}

## tenant frontend
TENANT_FRONTEND_PORT=8190
TENANT_BASE_PATH=/tenant
# The url to access the tenant-frontend from the inside of the docker network
TENANT_FRONTEND_URL=http://tenant-frontend:${TENANT_FRONTEND_PORT}
# The url to access the tenant application from the browser
TENANT_APP_URL=${GATEWAY_URL}${TENANT_BASE_PATH}

## WhatsApp Business API Configuration
WHATSAPP_API_URL=https://graph.facebook.com/v18.0
WHATSAPP_ACCESS_TOKEN=your_whatsapp_access_token
WHATSAPP_PHONE_NUMBER_ID=your_phone_number_id
WHATSAPP_BUSINESS_ACCOUNT_ID=your_business_account_id
WHATSAPP_WEBHOOK_VERIFY_TOKEN=your_webhook_verify_token
WHATSAPP_TEMPLATE_NAME=your_template_name
WHATSAPP_TEMPLATE_LANGUAGE=es
WHATSAPP_INVOICE_TEMPLATE=invoice_template
WHATSAPP_PAYMENT_NOTICE_TEMPLATE=payment_notice_template
WHATSAPP_PAYMENT_REMINDER_TEMPLATE=payment_reminder_template
WHATSAPP_FINAL_NOTICE_TEMPLATE=final_notice_template
WHATSAPP_LOGIN_TEMPLATE_NAME=login_template
WHATSAPP_LOGIN_TEMPLATE_LANGUAGE=es

## File Upload Configuration
UPLOAD_MAX_SIZE=2000000000  # Maximum file upload size in bytes (2GB)