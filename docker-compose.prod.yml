services:
  ###############################################################################
  # Cache Service
  ###############################################################################
  cache:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/cache:latest'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 8600
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
      VALKEY_URL: redis://valkey:6379
      VALKEY_PASSWORD: ${VALKEY_PASSWORD:-valkey_password}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret}
    expose:
      - '8600'
    networks:
      - net
    depends_on:
      valkey:
        condition: service_started

  ###############################################################################
  # Monitoring Service
  ###############################################################################
  monitoring:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/monitoring:latest'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 8800
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
      MONGO_URL: ${MONGO_URL:-mongodb://mongo/mredb}
      VALKEY_URL: redis://valkey:6379
      VALKEY_PASSWORD: ${VALKEY_PASSWORD:-valkey_password}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret}
    expose:
      - '8800'
    networks:
      - net
    depends_on:
      mongo:
        condition: service_started
      valkey:
        condition: service_started
  ###############################################################################
  # Valkey (Redis-compatible)
  ###############################################################################
  valkey:
    image: valkey/valkey:7.2-alpine
    environment:
      VALKEY_PORT: 6379
    expose:
      - '6379'
    volumes:
      - ./data/valkey:/data
    command: [
        'valkey-server',
        '--requirepass', '${VALKEY_PASSWORD:-valkey_password}',
        '--loglevel', 'warning',
        '--save', '900', '1',
        '--save', '300', '10', 
        '--save', '60', '10000'
      ]
    networks:
      - net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "valkey-cli", "-a", "${VALKEY_PASSWORD:-valkey_password}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  ###############################################################################
  # Mongo
  ###############################################################################
  mongo:
    image: mongo:7
    environment:
      MONGO_PORT: 27017
    command: --quiet --logpath /dev/null
    expose:
      - '27017'
    volumes:
      - ./data/mongodb:/data/db
      - ./backup:/backup
    networks:
      - net
  ###############################################################################
  # Reverse Proxy
  ###############################################################################
  reverse-proxy:
    image: caddy:latest
    profiles:
      - ''
    command: caddy reverse-proxy --from ${APP_PROTOCOL:-http}://${APP_DOMAIN}:${APP_PORT:-80} --to gateway:8080
    ports:
      - ${APP_PORT:-80}:${APP_PORT:-80}
      - 443:443
    networks:
      - net
  ###############################################################################
  # WhatsApp Service
  ###############################################################################
  whatsapp:
    image: 'ghcr.io/perezjoseph/microrealestate-fork/whatsapp:latest'
    ports:
      - "8500:8500"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
      VALKEY_URL: redis://valkey:6379
      VALKEY_PASSWORD: ${VALKEY_PASSWORD:-valkey_password}
      MONGO_URL: mongodb://mongo/mredb
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret}
      AUTHENTICATOR_URL: http://authenticator:8000
      WHATSAPP_API_URL: ${WHATSAPP_API_URL:-https://graph.facebook.com/v18.0}
      WHATSAPP_BUSINESS_ACCOUNT_ID: ${WHATSAPP_BUSINESS_ACCOUNT_ID}
      WHATSAPP_TEMPLATE_NAME: ${WHATSAPP_TEMPLATE_NAME:-invoice}
      WHATSAPP_TEMPLATE_LANGUAGE: ${WHATSAPP_TEMPLATE_LANGUAGE:-es}
      WHATSAPP_INVOICE_TEMPLATE: ${WHATSAPP_INVOICE_TEMPLATE:-factura2}
      WHATSAPP_PAYMENT_NOTICE_TEMPLATE: ${WHATSAPP_PAYMENT_NOTICE_TEMPLATE:-rentcall}
      WHATSAPP_PAYMENT_REMINDER_TEMPLATE: ${WHATSAPP_PAYMENT_REMINDER_TEMPLATE:-payment_reminder}
      WHATSAPP_FINAL_NOTICE_TEMPLATE: ${WHATSAPP_FINAL_NOTICE_TEMPLATE:-final_notice}
      WHATSAPP_LOGIN_TEMPLATE_NAME: ${WHATSAPP_LOGIN_TEMPLATE_NAME:-otpcode}
      WHATSAPP_LOGIN_TEMPLATE_LANGUAGE: ${WHATSAPP_LOGIN_TEMPLATE_LANGUAGE:-es}
      WHATSAPP_WEBHOOK_VERIFY_TOKEN: ${WHATSAPP_WEBHOOK_VERIFY_TOKEN:-microrealestate_webhook_token}
      CIPHER_KEY: ${CIPHER_KEY}
      CIPHER_IV_KEY: ${CIPHER_IV_KEY}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
    expose:
      - '8500'
    depends_on:
      - mongo
      - valkey
    networks:
      - net
  ###############################################################################
  # Gateway
  ###############################################################################
  gateway:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/gateway:latest'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      LOGGER_LEVEL: error
      PORT: 8080
      MONGO_URL: ${MONGO_URL:-mongodb://mongo/mredb}
      VALKEY_URL: redis://valkey:6379
      VALKEY_PASSWORD: ${VALKEY_PASSWORD:-valkey_password}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret}
      EXPOSE_FRONTENDS: 'true'
      AUTHENTICATOR_URL: http://authenticator:8000
      API_URL: http://api:8200/api/v2
      PDFGENERATOR_URL: http://pdfgenerator:8300/pdfgenerator
      EMAILER_URL: http://emailer:8400/emailer
      WHATSAPP_URL: http://whatsapp:8500
      CACHE_URL: http://cache:8600
      MONITORING_URL: http://monitoring:8800
      LANDLORD_FRONTEND_URL: http://landlord-frontend:8180
      LANDLORD_BASE_PATH: /landlord
      TENANT_FRONTEND_URL: http://tenant-frontend:8190
      TENANT_BASE_PATH: /tenant
      APP_DOMAIN: "${APP_DOMAIN:-localhost}:${APP_PORT:-8080}"
      CORS_ENABLED: 'true'
      TENANTAPI_URL: http://tenantapi:8250/tenantapi
      # Additional variables that might be needed
      CIPHER_KEY: ${CIPHER_KEY:-cipher_key}
      CIPHER_IV_KEY: ${CIPHER_IV_KEY:-cipher_iv_key}
    ports:
      - '8080:8080'
    networks:
      - net
    depends_on:
      authenticator:
        condition: service_started
      api:
        condition: service_started
      tenantapi:
        condition: service_started
      pdfgenerator:
        condition: service_started
      emailer:
        condition: service_started
      whatsapp:
        condition: service_started
      cache:
        condition: service_started

      monitoring:
        condition: service_started
  ###############################################################################
  # Authenticator
  ###############################################################################
  authenticator:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/authenticator:latest'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 8000
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
      VALKEY_URL: redis://valkey:6379
      VALKEY_PASSWORD: ${VALKEY_PASSWORD:-valkey_password} # Change password in production
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret} # Change secret in production
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-refresh_token_secret} # Change secret in production
      RESET_TOKEN_SECRET: ${RESET_TOKEN_SECRET:-reset_token_secret} # Change secret in production
      APPCREDZ_TOKEN_SECRET: ${APPCREDZ_TOKEN_SECRET:-appcredz_token_secret} # Change secret in production
      MONGO_URL: ${MONGO_URL:-mongodb://mongo/demodb}
      EMAILER_URL: http://emailer:8400/emailer
      SIGNUP: 'true'
      APP_DOMAIN: ${APP_DOMAIN:-localhost} # do not pass APP_PORT here
      APP_PROTOCOL: ${APP_PROTOCOL:-http}
      # WhatsApp Business API Configuration
      WHATSAPP_API_URL: ${WHATSAPP_API_URL:-https://graph.facebook.com/v23.0}
      WHATSAPP_ACCESS_TOKEN: ${WHATSAPP_ACCESS_TOKEN}
      WHATSAPP_PHONE_NUMBER_ID: ${WHATSAPP_PHONE_NUMBER_ID}
      WHATSAPP_BUSINESS_ACCOUNT_ID: ${WHATSAPP_BUSINESS_ACCOUNT_ID}
      WHATSAPP_LOGIN_TEMPLATE_NAME: ${WHATSAPP_LOGIN_TEMPLATE_NAME:-otpcode}
      WHATSAPP_LOGIN_TEMPLATE_LANGUAGE: ${WHATSAPP_LOGIN_TEMPLATE_LANGUAGE:-es}
    expose:
      - '8000'
    networks:
      - net
    depends_on:
      valkey:
        condition: service_started
      mongo:
        condition: service_started
      emailer:
        condition: service_started
  ###############################################################################
  # PDFGenerator
  ###############################################################################
  pdfgenerator:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/pdfgenerator:latest'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 8300
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
      MONGO_URL: ${MONGO_URL:-mongodb://mongo/mredb}
      VALKEY_URL: redis://valkey:6379
      VALKEY_PASSWORD: ${VALKEY_PASSWORD:-valkey_password}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret} # Change secret in production
      CIPHER_KEY: ${CIPHER_KEY:-cipher_key} # Change key in production
      CIPHER_IV_KEY: ${CIPHER_IV_KEY:-cipher_iv_key} # Change key in production
      UPLOAD_MAX_SIZE: 2000000000 # ~2Gb
    expose:
      - '8300'
    networks:
      - net
    depends_on:
      mongo:
        condition: service_started
  ###############################################################################
  # Emailer
  ###############################################################################
  emailer:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/emailer:latest'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      ALLOW_SENDING_EMAILS: 'true'
      PORT: 8400
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
      VALKEY_URL: redis://valkey:6379
      VALKEY_PASSWORD: ${VALKEY_PASSWORD:-valkey_password}
      LANDLORD_APP_URL: "${APP_PROTOCOL:-http}://${APP_DOMAIN:-localhost}:${APP_PORT:-8080}/landlord"
      TENANT_APP_URL: "${APP_PROTOCOL:-http}://${APP_DOMAIN:-localhost}:${APP_PORT:-8080}/tenant"
      MONGO_URL: ${MONGO_URL:-mongodb://mongo/mredb}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret} # Change secret in production
      CIPHER_KEY: ${CIPHER_KEY:-cipher_key} # Change key in production
      CIPHER_IV_KEY: ${CIPHER_IV_KEY:-cipher_iv_key} # Change key in production
      PDFGENERATOR_URL: http://pdfgenerator:8300/pdfgenerator
      #########################################
      # Email service configuration
      # needed to reset landlord password
      # needed to sign tenant in
      #########################################
      GMAIL_EMAIL: ${GMAIL_EMAIL}
      GMAIL_APP_PASSWORD: ${GMAIL_APP_PASSWORD}
      #########################################
      # OR
      #########################################
      MAILGUN_API_KEY: ${MAILGUN_API_KEY}
      MAILGUN_DOMAIN: ${MAILGUN_DOMAIN}
      #########################################
      # OR
      #########################################
      SMTP_SERVER: ${SMTP_SERVER}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      #########################################
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_REPLY_TO: ${EMAIL_REPLY_TO}
      EMAIL_BCC: ${EMAIL_BCC}
      #########################################
    expose:
      - '8400'
    networks:
      - net
    depends_on:
      mongo:
        condition: service_started
      pdfgenerator:
        condition: service_started
  ###############################################################################
  # api
  ###############################################################################
  api:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/api:latest'
    volumes:
      - ./backup:/usr/app/backup
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 8200
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
      MONGO_URL: ${MONGO_URL:-mongodb://mongo/mredb}
      VALKEY_URL: redis://valkey:6379
      VALKEY_PASSWORD: ${VALKEY_PASSWORD:-valkey_password}
      EMAILER_URL: http://emailer:8400/emailer
      PDFGENERATOR_URL: http://pdfgenerator:8300/pdfgenerator
      RESTORE_DB: 'false'
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret} # Change secret in production
      CIPHER_KEY: ${CIPHER_KEY:-cipher_key} # Change key in production
      CIPHER_IV_KEY: ${CIPHER_IV_KEY:-cipher_iv_key} # Change key in production
    expose:
      - '8200'
    networks:
      - net
    depends_on:
      mongo:
        condition: service_started
      emailer:
        condition: service_started
      pdfgenerator:
        condition: service_started
  ###############################################################################
  # tenant api
  ###############################################################################
  tenantapi:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/tenantapi:latest'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 8250
      LOGGER_LEVEL: ${LOGGER_LEVEL:-info}
      MONGO_URL: ${MONGO_URL:-mongodb://mongo/mredb}
      VALKEY_URL: redis://valkey:6379
      VALKEY_PASSWORD: ${VALKEY_PASSWORD:-valkey_password}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret} # Change secret in production
    expose:
      - '8250'
    networks:
      - net
    depends_on:
      mongo:
        condition: service_started
  ###############################################################################
  # Landlord frontend
  ###############################################################################
  landlord-frontend:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/landlord-frontend:latest'
    environment:
      BASE_PATH: /landlord
      PORT: 8180
      DOCKER_GATEWAY_URL: http://gateway:8080
      CORS_ENABLED: 'true'
      GATEWAY_URL: "${APP_PROTOCOL:-http}://${APP_DOMAIN:-localhost}:${APP_PORT:-8080}"
      NODE_ENV: ${NODE_ENV:-production}
      SIGNUP: 'true'
      FEEDBACK_EMAIL: ${FEEDBACK_EMAIL:-feedback@microrealestate.com}
    expose:
      - '8180'
    networks:
      - net
    depends_on:
      gateway:
        condition: service_started
  ###############################################################################
  # Tenant frontend
  ###############################################################################
  tenant-frontend:
    restart: unless-stopped
    image: 'ghcr.io/perezjoseph/microrealestate-fork/tenant-frontend:latest'
    environment:
      BASE_PATH: /tenant
      PORT: 8190
      DOCKER_GATEWAY_URL: http://gateway:8080
      CORS_ENABLED: 'true'
      GATEWAY_URL: "${APP_PROTOCOL:-http}://${APP_DOMAIN:-localhost}:${APP_PORT:-8080}"
      NODE_ENV: ${NODE_ENV:-production}
    expose:
      - '8190'
    networks:
      - net
    depends_on:
      gateway:
        condition: service_started
###############################################################################
# microservices network
###############################################################################
networks:
  net:
    driver: bridge
