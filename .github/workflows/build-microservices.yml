name: Build Microservices

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-microservices:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - service: api
            path: services/api
          - service: authenticator
            path: services/authenticator
          - service: emailer
            path: services/emailer
          - service: gateway
            path: services/gateway
          - service: landlord-frontend
            path: webapps/landlord
          - service: pdfgenerator
            path: services/pdfgenerator
          - service: resetservice
            path: services/resetservice
          - service: tenant-frontend
            path: webapps/tenant
          - service: tenantapi
            path: services/tenantapi
          - service: whatsapp
            path: services/whatsapp

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./${{ matrix.path }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-complete:
    needs: build-microservices
    runs-on: ubuntu-latest
    steps:
    - name: Build Summary
      run: |
        echo "âœ… All microservices built successfully!"
        echo "Built services: api, authenticator, emailer, gateway, landlord-frontend, pdfgenerator, resetservice, tenant-frontend, tenantapi, whatsapp"
        echo "Images pushed to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-[service]"
