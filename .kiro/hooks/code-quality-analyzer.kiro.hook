{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and provides suggestions for code quality improvements, including code smells, design patterns, best practices, readability, maintainability, and performance optimizations while preserving functionality.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "services/**/*.js",
      "services/**/*.ts",
      "webapps/**/*.js",
      "webapps/**/*.ts",
      "webapps/**/*.jsx",
      "webapps/**/*.tsx",
      "types/**/*.ts",
      "cli/**/*.js",
      "cli/**/*.ts"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve code structure\n3. **Best Practices**: Check for adherence to JavaScript/TypeScript/React/Node.js best practices\n4. **Readability**: Suggest improvements for variable naming, function structure, and code organization\n5. **Maintainability**: Identify areas that could be refactored for better maintainability\n6. **Performance**: Suggest optimizations that don't compromise functionality\n\nFor each suggestion:\n- Explain the current issue clearly\n- Provide specific, actionable recommendations\n- Include code examples where helpful\n- Prioritize suggestions by impact (high/medium/low)\n- Ensure suggestions maintain existing functionality\n\nConsider the MicroRealEstate context: microservices architecture, property management domain, Node.js/React stack, and multi-tenant system."
  }
}